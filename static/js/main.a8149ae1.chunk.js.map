{"version":3,"sources":["components/TodoList.js","components/Home.js","components/Nav.js","components/About.js","components/AppRouter.js","components/App.js","index.js"],"names":["TodoList","todo","handleEdit","handleDelete","handleChange","handleSubmit","index","editing","map","data","i","className","content","type","id","onChange","date","onClick","Home","useState","setContent","setEditing","setTodo","setIndex","inputRef","useRef","e","value","target","preventDefault","editObj","Date","now","editedTodo","obj","Math","random","toString","substr","axios","post","current","onSubmit","ref","placeholder","required","dataset","newList","filter","console","log","findIndex","Nav","exact","activeClassName","to","replace","About","AppRouter","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8149ae1.chunk.js","sourcesContent":["import React from 'react';\n\nconst TodoList = ({ todo, handleEdit, handleDelete, handleChange, handleSubmit, index, editing }) => {\n    \n    return (\n        <div>\n            {\n                todo.map((data, i) => (\n                    <>\n                        <div className = \"todo-container\">\n                            <h3>{ data.content }</h3>\n                            {\n                                (editing && (i === index)) && <input type = \"text\" data-index = { data.id } onChange = { handleChange } />\n                            }\n                            <p>added on { data.date }</p>\n                            {\n                                (editing && (i === index)) && <button onClick = { handleSubmit } data-index = { data.id }>Submit</button>\n                            }\n                            <button onClick = { handleEdit } data-index = { data.id } >{ (editing && (i === index)) ? \"Cancel\" : \"Edit\" }</button>\n                            <button onClick = { handleDelete } data-index = { data.id } >Delete</button>\n                        </div>\n                    </>\n                ))\n            }\n        </div>\n    );\n}\n\nexport default TodoList;","import React, { useState, useEffect, useRef  } from 'react';\nimport axios from 'axios';\nimport TodoList from 'components/TodoList';\n\nconst Home = () => {\n    const [ content, setContent ] = useState(\"\");\n    const [ editing, setEditing ] = useState(false);\n    const [ todo, setTodo ] = useState(\"\");\n        // 기존의 todo state는 db에서 가져온 결과를\n        // 담아야 하고 todo state를 이용했던 것 들은 \n        // 일단 db에서 가져온 데이터를 바탕으로 수정해준다.\n    const [ index, setIndex ] = useState(\"\");\n    const inputRef = useRef();\n\n    const handleChange = (e) => {\n        const { value } = e.target;\n        setContent(value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (!editing) {\n            const obj = {\n                id: Math.random().toString(36).substr(2, 9),\n                date: Date.now(),\n                content: content,\n            }\n            setTodo([...todo, obj]);\n            axios.post(\"http://localhost:3001/create\", obj)\n        } else {\n            const editObj = {\n                id: todo[index].id, // \n                date: Date.now(),\n                content: content,\n            }\n            let editedTodo = todo; // \n            editedTodo[index] = editObj; // \n            setTodo(editedTodo); //\n        }\n        inputRef.current.value = \"\";\n        setEditing(false);\n    }\n\n    const handleEdit = (e) => {\n        const { dataset } = e.target;\n        setEditing(!editing);\n        let index = todo.findIndex((data => data.id === dataset.index)); // \n        setIndex(index);\n        console.log(index);\n    }\n\n    const handleDelete = (e) => {\n        const { dataset } = e.target;\n        const newList = todo.filter((data) => data.id !== dataset.index); // \n        console.log(newList);\n        setTodo(newList); // \n    }\n\n    // useEffect(() => {\n    //     fetch(\"/todo\").then((res) => {\n    //         if(res.ok){\n    //             return res.json()\n    //         }\n    //     }).then((jsonRes) => {\n    //         setTodo()\n    //     })\n    // })\n\n    return(\n        <div className = \"container\">\n            <h1>ToDo</h1>\n            <form className = \"todo-form\" onSubmit = { handleSubmit }>\n                <input type = \"text\" onChange = { handleChange } ref = { inputRef } placeholder = \"content\" required />\n                <input type = \"submit\" />\n            </form>\n            {\n                todo ? <TodoList todo = { todo }\n                                handleChange = { handleChange }\n                                handleDelete = { handleDelete }\n                                handleEdit = { handleEdit } \n                                handleSubmit = { handleSubmit } \n                                index = { index } \n                                editing = { editing } /> \n                    : \"No list for today!\"\n            }\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Nav = () => {\n\n    return (\n        <nav>\n            <ul>\n                <NavLink exact activeClassName = \"Home\" to = \"/\" replace><li>Home</li></NavLink> \n                <NavLink exact activeClassName = \"About\" to = \"/about\" replace><li>About</li></NavLink> \n            </ul>\n        </nav>\n    );\n}\n\nexport default Nav","import React from 'react';\n\nconst About = () => {\n    return (\n        <div>\n            <h1>About</h1>\n            <p>React and MongoDB ToDo App</p>\n        </div>\n    );\n}\n\nexport default About;","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from 'components/Home';\nimport Nav from 'components/Nav';\nimport About from 'components/About';\n\nconst AppRouter = () => {\n    return(\n        <Router>\n            <Nav />\n            <Switch>\n                <Route exact path = \"/\">\n                    <Home />\n                </Route>\n                <Route exact path= \"/about\">\n                    <About />\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default AppRouter;","import 'style/App.css';\nimport AppRouter from 'components/AppRouter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}